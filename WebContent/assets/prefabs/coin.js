
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.4 (Phaser v2.6.2)


/**
 * coin
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Number} aX The x coordinate (in world space) to position the Sprite at.
 * @param {Number} aY The y coordinate (in world space) to position the Sprite at.
 * @param {any} aKey This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture.
 * @param {any} aFrame If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.
 */
function coin(aGame, aX, aY, aKey, aFrame) {
	Phaser.Sprite.call(this, aGame, aX, aY, aKey || 'atlas4', aFrame == undefined || aFrame == null? 'coin0000' : aFrame);
	this.anchor.set(0.5, 0.5);
	var _anim_flash = this.animations.add('flash', ['coin0000', 'coin0001', 'coin0002', 'coin0003', 'coin0004', 'coin0005', 'coin0006', 'coin0007', 'coin0008', 'coin0009'], 12, true);
	_anim_flash.play();
	this.game.physics.arcade.enable(this);
	this.body.gravity.y = 800.0;
	
	// fields
	
	this.fCoinPrefab = this;
	
	this.myCreate();
	
}

/** @type Phaser.Sprite */
var coin_proto = Object.create(Phaser.Sprite.prototype);
coin.prototype = coin_proto;
coin.prototype.constructor = coin;

/* --- end generated code --- */
// -- user code here --


coin.prototype.myCreate = function() {
	this.coinLife = 25000;
	this.dissapearingCoin = false;
	
}
coin.prototype.timed = function() {
	this.dissapearingCoin =  true;
	this.glowear = new Phaser.Signal();
	this.glowear.addOnce(this.glow, this);
	
	this.bool=true;
	this.timer = this.game.time.create(false);
    this.timer.loop(15000, function(){
    	this.destroy();
    	
    }, this);
    this.timer.start();
    

 
    	
	
}
coin.prototype.glow = function() {
	this.bool=true;
	this.timer2 = this.game.time.create(false);
    this.timer2.loop(100, function(){
    	this.bool = !this.bool;
    	
	    	if(this.bool){
				this.alpha=0.5;
	    	}else{
				this.alpha=1;

	    	}
	  
    }, this);
    this.timer2.start();
    

	    
	    
	
}
coin.prototype.update = function() {
	if(this.dissapearingCoin){
		if(this.timer.duration<3000){
			
			this.glowear.dispatch();
		}
	}
	
	
}
