
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.4 (Phaser v2.6.2)


/**
 * lifeBar
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Number} aX The x coordinate (in world space) to position the Sprite at.
 * @param {Number} aY The y coordinate (in world space) to position the Sprite at.
 * @param {any} aKey This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture.
 * @param {any} aFrame If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.
 */
function lifeBar(aGame, aX, aY, aKey, aFrame) {
	Phaser.Sprite.call(this, aGame, aX, aY, aKey || 'lifeBar', aFrame == undefined || aFrame == null? null : aFrame);
	
	this.myCreate();
	
}

/** @type Phaser.Sprite */
var lifeBar_proto = Object.create(Phaser.Sprite.prototype);
lifeBar.prototype = lifeBar_proto;
lifeBar.prototype.constructor = lifeBar;

/* --- end generated code --- */
// -- user code here --
lifeBar.prototype.myCreate = function() {
	
	var graphics = this.game.add.graphics(0, 0);

	var color = [0xD20000,0xC03D4A,0x8AC03D,0x2EE5CB,0x2E9BE5,0xA949E6];
	var randomNumber = Math.ceil(Math.random()*5);
	var randomColor = color[0];

	this.randomColor =  randomColor;
    graphics.beginFill(randomColor, 1);
    this.barWidth = this.width-45;
   
    graphics.drawRect(0, 0, this.barWidth, 15);

   this.lifebar = this.game.add.sprite(this.x+40, this.y+16, graphics.generateTexture());
  
   graphics.destroy();
   
}

lifeBar.prototype.update = function() {

	this.lifebar.width = ((this.game.state.getCurrentStateï»¿().fPlayer.life*100)/  this.barWidth)*this.barWidth/85;

}
