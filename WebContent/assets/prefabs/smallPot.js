
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.4 (Phaser v2.6.2)


/**
 * smallPot
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Number} aX The x coordinate (in world space) to position the Sprite at.
 * @param {Number} aY The y coordinate (in world space) to position the Sprite at.
 * @param {any} aKey This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture.
 * @param {any} aFrame If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.
 */
function smallPot(aGame, aX, aY, aKey, aFrame) {
	Phaser.Sprite.call(this, aGame, aX, aY, aKey || 'atlas4', aFrame == undefined || aFrame == null? 'smallPot instancia 10000' : aFrame);
	this.anchor.set(0.5, 0.5);
	this.animations.add('cooking', ['smallPot instancia 10000', 'smallPot instancia 10001', 'smallPot instancia 10002', 'smallPot instancia 10003', 'smallPot instancia 10004', 'smallPot instancia 10005', 'smallPot instancia 10006', 'smallPot instancia 10007', 'smallPot instancia 10008', 'smallPot instancia 10009', 'smallPot instancia 10010', 'smallPot instancia 10011', 'smallPot instancia 10012', 'smallPot instancia 10013', 'smallPot instancia 10014', 'smallPot instancia 10015', 'smallPot instancia 10016', 'smallPot instancia 10017', 'smallPot instancia 10018', 'smallPot instancia 10019', 'smallPot instancia 10020', 'smallPot instancia 10021', 'smallPot instancia 10022', 'smallPot instancia 10023', 'smallPot instancia 10024', 'smallPot instancia 10025', 'smallPot instancia 10026', 'smallPot instancia 10027', 'smallPot instancia 10028', 'smallPot instancia 10029', 'smallPot instancia 10030', 'smallPot instancia 10031', 'smallPot instancia 10032', 'smallPot instancia 10033', 'smallPot instancia 10034', 'smallPot instancia 10035', 'smallPot instancia 10036', 'smallPot instancia 10037', 'smallPot instancia 10038', 'smallPot instancia 10039', 'smallPot instancia 10040', 'smallPot instancia 10041', 'smallPot instancia 10042', 'smallPot instancia 10043', 'smallPot instancia 10044', 'smallPot instancia 10045', 'smallPot instancia 10046', 'smallPot instancia 10047', 'smallPot instancia 10048', 'smallPot instancia 10049', 'smallPot instancia 10050', 'smallPot instancia 10051', 'smallPot instancia 10052', 'smallPot instancia 10053', 'smallPot instancia 10054', 'smallPot instancia 10055', 'smallPot instancia 10056', 'smallPot instancia 10057', 'smallPot instancia 10058', 'smallPot instancia 10059'], 12, false);
	this.animations.add('done', ['dondePot instancia 10000', 'dondePot instancia 10001', 'dondePot instancia 10002', 'dondePot instancia 10003', 'dondePot instancia 10004', 'dondePot instancia 10005', 'dondePot instancia 10006', 'dondePot instancia 10007', 'dondePot instancia 10008', 'dondePot instancia 10009', 'dondePot instancia 10010', 'dondePot instancia 10011'], 12, true);
	this.animations.add('strawCooking', ['strawCooking0000', 'strawCooking0001', 'strawCooking0002', 'strawCooking0003', 'strawCooking0004', 'strawCooking0005', 'strawCooking0006', 'strawCooking0007', 'strawCooking0008', 'strawCooking0009', 'strawCooking0010', 'strawCooking0011', 'strawCooking0012', 'strawCooking0013', 'strawCooking0014', 'strawCooking0015', 'strawCooking0016', 'strawCooking0017', 'strawCooking0018', 'strawCooking0019', 'strawCooking0020', 'strawCooking0021', 'strawCooking0022', 'strawCooking0023', 'strawCooking0024', 'strawCooking0025', 'strawCooking0026', 'strawCooking0027', 'strawCooking0028', 'strawCooking0029', 'strawCooking0030', 'strawCooking0031', 'strawCooking0032', 'strawCooking0033', 'strawCooking0034', 'strawCooking0035', 'strawCooking0036', 'strawCooking0037', 'strawCooking0038', 'strawCooking0039', 'strawCooking0040', 'strawCooking0041', 'strawCooking0042', 'strawCooking0043', 'strawCooking0044', 'strawCooking0045', 'strawCooking0046', 'strawCooking0047', 'strawCooking0048', 'strawCooking0049', 'strawCooking0050', 'strawCooking0051', 'strawCooking0052', 'strawCooking0053', 'strawCooking0054', 'strawCooking0055', 'strawCooking0056', 'strawCooking0057', 'strawCooking0058', 'strawCooking0059'], 12, false);
	this.animations.add('strawDone', ['strawCookingDone0000', 'strawCookingDone0001', 'strawCookingDone0002', 'strawCookingDone0003', 'strawCookingDone0004', 'strawCookingDone0005', 'strawCookingDone0006', 'strawCookingDone0007', 'strawCookingDone0008', 'strawCookingDone0009', 'strawCookingDone0010', 'strawCookingDone0011'], 12, true);
	this.animations.add('lemonCooking', ['lemonCooking0000', 'lemonCooking0001', 'lemonCooking0002', 'lemonCooking0003', 'lemonCooking0004', 'lemonCooking0005', 'lemonCooking0006', 'lemonCooking0007', 'lemonCooking0008', 'lemonCooking0009', 'lemonCooking0010', 'lemonCooking0011', 'lemonCooking0012', 'lemonCooking0013', 'lemonCooking0014', 'lemonCooking0015', 'lemonCooking0016', 'lemonCooking0017', 'lemonCooking0018', 'lemonCooking0019', 'lemonCooking0020', 'lemonCooking0021', 'lemonCooking0022', 'lemonCooking0023', 'lemonCooking0024', 'lemonCooking0025', 'lemonCooking0026', 'lemonCooking0027', 'lemonCooking0028', 'lemonCooking0029', 'lemonCooking0030', 'lemonCooking0031', 'lemonCooking0032', 'lemonCooking0033', 'lemonCooking0034', 'lemonCooking0035', 'lemonCooking0036', 'lemonCooking0037', 'lemonCooking0038', 'lemonCooking0039', 'lemonCooking0040', 'lemonCooking0041', 'lemonCooking0042', 'lemonCooking0043', 'lemonCooking0044', 'lemonCooking0045', 'lemonCooking0046', 'lemonCooking0047', 'lemonCooking0048', 'lemonCooking0049', 'lemonCooking0050', 'lemonCooking0051', 'lemonCooking0052', 'lemonCooking0053', 'lemonCooking0054', 'lemonCooking0055', 'lemonCooking0056', 'lemonCooking0057', 'lemonCooking0058', 'lemonCooking0059'], 12, false);
	this.animations.add('lemonDone', ['lemonCookingDone0000', 'lemonCookingDone0001', 'lemonCookingDone0002', 'lemonCookingDone0003', 'lemonCookingDone0004', 'lemonCookingDone0005', 'lemonCookingDone0006', 'lemonCookingDone0007', 'lemonCookingDone0008', 'lemonCookingDone0009', 'lemonCookingDone0010', 'lemonCookingDone0011'], 12, true);
	this.animations.add('bananaCooking', ['bananaCooking0000', 'bananaCooking0001', 'bananaCooking0002', 'bananaCooking0003', 'bananaCooking0004', 'bananaCooking0005', 'bananaCooking0006', 'bananaCooking0007', 'bananaCooking0008', 'bananaCooking0009', 'bananaCooking0010', 'bananaCooking0011', 'bananaCooking0012', 'bananaCooking0013', 'bananaCooking0014', 'bananaCooking0015', 'bananaCooking0016', 'bananaCooking0017', 'bananaCooking0018', 'bananaCooking0019', 'bananaCooking0020', 'bananaCooking0021', 'bananaCooking0022', 'bananaCooking0023', 'bananaCooking0024', 'bananaCooking0025', 'bananaCooking0026', 'bananaCooking0027', 'bananaCooking0028', 'bananaCooking0029', 'bananaCooking0030', 'bananaCooking0031', 'bananaCooking0032', 'bananaCooking0033', 'bananaCooking0034', 'bananaCooking0035', 'bananaCooking0036', 'bananaCooking0037', 'bananaCooking0038', 'bananaCooking0039', 'bananaCooking0040', 'bananaCooking0041', 'bananaCooking0042', 'bananaCooking0043', 'bananaCooking0044', 'bananaCooking0045', 'bananaCooking0046', 'bananaCooking0047', 'bananaCooking0048', 'bananaCooking0049', 'bananaCooking0050', 'bananaCooking0051', 'bananaCooking0052', 'bananaCooking0053', 'bananaCooking0054', 'bananaCooking0055', 'bananaCooking0056', 'bananaCooking0057', 'bananaCooking0058', 'bananaCooking0059'], 12, false);
	this.animations.add('bananaDone', ['bananaCookingDone0000', 'bananaCookingDone0001', 'bananaCookingDone0002', 'bananaCookingDone0003', 'bananaCookingDone0004', 'bananaCookingDone0005', 'bananaCookingDone0006', 'bananaCookingDone0007', 'bananaCookingDone0008', 'bananaCookingDone0009', 'bananaCookingDone0010', 'bananaCookingDone0011'], 12, true);
	this.animations.add('idle', ['smallPot instancia 10000'], 1, false);
	this.game.physics.arcade.enable(this);
	this.body.setSize(42.0, 36.0);
	
	this.myCreate();
	
}

/** @type Phaser.Sprite */
var smallPot_proto = Object.create(Phaser.Sprite.prototype);
smallPot.prototype = smallPot_proto;
smallPot.prototype.constructor = smallPot;

/* --- end generated code --- */
// -- user code here --
smallPot.prototype.myCreate = function() {
	
	this.myItemsCooking =  0;
	
}