
// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.4 (Phaser v2.6.2)


/**
 * elevator
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Number} aX The x coordinate (in world space) to position the Sprite at.
 * @param {Number} aY The y coordinate (in world space) to position the Sprite at.
 * @param {any} aKey This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture.
 * @param {any} aFrame If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.
 */
function elevator(aGame, aX, aY, aKey, aFrame) {
	Phaser.Sprite.call(this, aGame, aX, aY, aKey || 'atlas4', aFrame == undefined || aFrame == null? 'elevator0000' : aFrame);
	this.anchor.set(0.5, 0.5);
	var _anim_elevate = this.animations.add('elevate', ['elevator0000', 'elevator0001', 'elevator0002', 'elevator0003', 'elevator0004', 'elevator0005', 'elevator0006', 'elevator0007', 'elevator0008', 'elevator0009'], 48, true);
	_anim_elevate.play();
	this.game.physics.arcade.enable(this);
	this.body.immovable = true;
	this.body.velocity.y = 30.0;
	this.body.checkCollision.down = false;
	
	this.myCreate()
	
}

/** @type Phaser.Sprite */
var elevator_proto = Object.create(Phaser.Sprite.prototype);
elevator.prototype = elevator_proto;
elevator.prototype.constructor = elevator;

/* --- end generated code --- */
// -- user code here --
elevator.prototype.myCreate = function() {
	
	this.originalPos = this.y;
	this.distance = 160;
	this.finalPos = this.originalPos + this.distance;
	this.elevatorVelo = this.body.velocity.y;
	
    
	
};

elevator.prototype.update = function() {
	
if(this.y > this.finalPos ){
	this.body.velocity.y = -this.elevatorVelo;
}
if(this.y < this.originalPos ){
	this.body.velocity.y = this.elevatorVelo;
}


	
};
